<div class="content ">
  <h1><%= @channel.channel_name%></h1>
  <button class="slideshow">Slideshow mode</button>

<div class="channelList">

<% @feeds.each_with_index do |key, value| %>
  <!-- use redirect tag because to avoid anchor to be inserted randomly. -->
  <redirect class="article_link" href="<%= key.content[:origLink] || key.content[:link] %>">
    <article>
        <h1><%= key.content[:title] %></h1>

        <div class="single-content">
          <%= @content[value] %>
        </div>

    </article>
  </redirect>
<% end %>
</div>


<script>

  function timer() {
    $('button.mfp-arrow-right').trigger('click');
    // intervalID = window.setInterval(hello, 400*15);
  }


  imgArray = [];

  $(document).ready(function() {

    // $('.mfp-arrow-right').on('click', function() {
    //   console.log('button was click');
    //   window.clearInterval(intervalID);
    //   intervalID = window.setInterval(timer, 400*15);
    // });
    $('redirect').on('click', function() {
      href = $(this).attr('href');
      window.location.href = href;
    });
    // build array to put inside magnificPopup
    $('article').map(function (){
      //var item = {src: $('content img').src, title: $('content img').title}
      var item = {
        title: $(this).find('h1').text(),
        src: $(this).find('img').attr('src'),
        desc: $(this).find('.single-content').text()
      }
      imgArray.push(item)
    });

    var intervalID;

    $('.slideshow').magnificPopup({
      alignTop: true,
      type:'image',
      items: imgArray,
      gallery:{
        enabled:true
      },
      image: {
        markup: '<div class="mfp-figure">'+
                  '<div class="mfp-close"></div>'+
                  '<div class="mfp-img "></div>'+
                  '<div class="mfp-bottom-bar">'+
                    '<div class="mfp-title"></div>'+
                    '<div class="mfp-desc"></div>'+
                    '<div class="mfp-counter"></div>'+
                  '</div>'+
                '</div>', // Popup HTML markup. `.mfp-img` div will be replaced with img tag, `.mfp-close` by close button

        //cursor: 'mfp-zoom-out-cur', // Class that adds zoom cursor, will be added to body. Set to null to disable zoom out cursor.

        titleSrc: 'title', // Attribute of the target element that contains caption for the slide.
        // Or the function that should return the title. For example:
        verticalFit: true, // Fits image in area vertically

        fixedBgPos:  true,

        tError: '<a href="%url%">The image</a> could not be loaded.' // Error message
      },
      callbacks: {
        open: function() {
          function timer() {
            $('button.mfp-arrow-right').trigger('click');
            // $.magnificPopup.proto.next.call(self);
            // intervalID = window.setInterval(hello, 400*15);
          }
          intervalID = window.setInterval(timer, 400*15);

          // $.magnificPopup.instance.next = function () {
          //   var self = this;
          //   $content = $(this).find('.mfp-content');
          //   console.log($(this).find('.mfp-content'));
          //   setTimeout(function () {
          //       $.magnificPopup.proto.next.call(self);
          //   }, 50);
            // var effectNext = "fadeIn";
            // var animateOptions = {
            //     delay: 100,
            //     duration: !/\./.test(effectNext) ? 500 : null
            // };
            // if (effectNext === "fadeIn" || /In$/.test(effectNext)) {
            //     this.content.velocity({
            //         opacity: 0
            //     }, 100);
            // }

            // this.content.velocity(effectNext, animateOptions);

          // };

        },
        close: function() {
          window.clearInterval(intervalID);
        },
        imageLoadComplete: function() {
          var self = this;
          setTimeout(function() { self.wrap.addClass('mfp-image-loaded'); }, 16);
        }
      },
      // Delay in milliseconds before popup is removed
      removalDelay: 300,

      // Class that is added to popup wrapper and background
      // make it unique to apply your CSS animations just to this exact popup
      mainClass: 'mfp-fade'
    });
  });
</script>
<script>

  var firstP = $('article').first().find('p').first();
  var firstImg = $('article').first().find('p').first();

  $.each($('article .single-content'), function() {
    $p = $('<p>').html($(this).first().find('p').first().text().substr(0,200)+'...');

    $(this).first().find('img').filter(function() {
      //console.log('width: ' + $(this).width() + 'height: ' + $(this).height());
      if($(this).height() > 200) {
        $img = $(this);
      }
    });

    $figure = $(this).first().find('figure').first();

    $(this).empty().append($p).append($img, $figure);
  });


</script>

